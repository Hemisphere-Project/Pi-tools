#!/usr/bin/env python3
import sys, filecmp, os
from shutil import copyfile
import filecmp


LOCALSOURCE = '/boot/wifi'
USBSOURCE = '/data/usb/wifi'
SYNCSOURCE = '/data/sync/wifi'
DEST = '/etc/NetworkManager/system-connections'
EXT = '.nmconnection'

engageRW = False


def syncFolder(src, dest, ext=''):
    global engageRW
    somethingChanged = False
    
    print("[setnet] Syncing "+src+" to "+dest)
    
    if not os.path.isdir(src):
        print("  - Source path not found.. abort")
        return False
    
    srcList     = [f.split(ext)[0] for f in os.listdir(src)     if os.path.isfile(os.path.join(src, f))]
    destList    = [f.split(ext)[0] for f in os.listdir(dest)    if os.path.isfile(os.path.join(dest, f))]
    
    print("  - Wanted files", srcList)
    print("  - Existing files", destList)
    
    # add/update new files
    for c in srcList:
        srcFile = os.path.join(src,c+ext)
        destFile = os.path.join(dest,c+ext)
        if not os.path.exists(srcFile):
            print('ERROR: file not found:', c)
        elif not os.path.exists(destFile) or not filecmp.cmp(srcFile, destFile, shallow=False):
            if not engageRW:
                engageRW = True
                os.system('rw')
            copyfile(srcFile, destFile)
            print('  File updated:', c)
            somethingChanged = True
        else:
            print('  File valid:', c)
            
    # remove unused
    for e in destList:
        if not e in srcList:
            if not engageRW:
                engageRW = True
                os.system('rw')
            try:
                os.remove(os.path.join(dest,e+ext))
            except FileNotFoundError:
                os.remove(os.path.join(dest,e))
            somethingChanged = True
            print('  File removed:', e)
            
    return somethingChanged


# copy profiles from sync
syncFolder(SYNCSOURCE, LOCALSOURCE, EXT)
print()

# copy profiles from usb
syncFolder(USBSOURCE, LOCALSOURCE, EXT)
print()

# copy profiles to NM
print("[setnet] Applying profiles to NetworkManager")
syncFolder(LOCALSOURCE, DEST, EXT)


# Dirty
if engageRW:
    # Set permission
    os.system('chmod 600 -R '+DEST  )

    # RO
    os.system('ro')
    engageRW = False

    # Restart NM
    print('\n[setnet] Restarting NetworkManager')
    os.system('systemctl restart NetworkManager')


print('\ndone !')
